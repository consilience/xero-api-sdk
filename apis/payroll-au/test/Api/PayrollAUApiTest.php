<?php

namespace Consilience\Xero\PayrollAuSdk;

/**
 * PayrollAUApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Consilience\Xero\PayrollAuSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Xero Payroll AU
 *
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@xero.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

use \Consilience\Xero\PayrollAuSdk\Configuration;
use \Consilience\Xero\PayrollAuSdk\ApiException;
use \Consilience\Xero\PayrollAuSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PayrollAUApiTest Class Doc Comment
 *
 * @category Class
 * @package  Consilience\Xero\PayrollAuSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayrollAUApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createEmployee
     *
     * Use this method to create a payroll employee.
     *
     */
    public function testCreateEmployee()
    {
    }

    /**
     * Test case for createLeaveApplication
     *
     * Use this method to create a Leave Application.
     *
     */
    public function testCreateLeaveApplication()
    {
    }

    /**
     * Test case for createPayItem
     *
     * Use this method to create a Pay Item.
     *
     */
    public function testCreatePayItem()
    {
    }

    /**
     * Test case for createPayrollCalendar
     *
     * Use this method to create a Payroll Calendars.
     *
     */
    public function testCreatePayrollCalendar()
    {
    }

    /**
     * Test case for createPayrun
     *
     * Use this method to create a payrun.
     *
     */
    public function testCreatePayrun()
    {
    }

    /**
     * Test case for createSuperfund
     *
     * Use this method to create a super fund.
     *
     */
    public function testCreateSuperfund()
    {
    }

    /**
     * Test case for createTimesheet
     *
     * Use this method to create a timesheet.
     *
     */
    public function testCreateTimesheet()
    {
    }

    /**
     * Test case for getEmployee
     *
     * searches for an employee by unique id.
     *
     */
    public function testGetEmployee()
    {
    }

    /**
     * Test case for getEmployees
     *
     * searches employees.
     *
     */
    public function testGetEmployees()
    {
    }

    /**
     * Test case for getLeaveApplication
     *
     * searches for an Leave Application by unique id.
     *
     */
    public function testGetLeaveApplication()
    {
    }

    /**
     * Test case for getLeaveApplications
     *
     * searches Leave Applications.
     *
     */
    public function testGetLeaveApplications()
    {
    }

    /**
     * Test case for getPayItems
     *
     * searches Pay Items.
     *
     */
    public function testGetPayItems()
    {
    }

    /**
     * Test case for getPayrollCalendar
     *
     * searches Payroll Calendars.
     *
     */
    public function testGetPayrollCalendar()
    {
    }

    /**
     * Test case for getPayrollCalendars
     *
     * searches Payroll Calendars.
     *
     */
    public function testGetPayrollCalendars()
    {
    }

    /**
     * Test case for getPayrun
     *
     * searches for an payrun by unique id.
     *
     */
    public function testGetPayrun()
    {
    }

    /**
     * Test case for getPayruns
     *
     * searches payruns.
     *
     */
    public function testGetPayruns()
    {
    }

    /**
     * Test case for getPayslip
     *
     * searches for an payslip by unique id.
     *
     */
    public function testGetPayslip()
    {
    }

    /**
     * Test case for getSettings
     *
     * retrieve settings.
     *
     */
    public function testGetSettings()
    {
    }

    /**
     * Test case for getSuperfund
     *
     * searches for an Superfund by unique id.
     *
     */
    public function testGetSuperfund()
    {
    }

    /**
     * Test case for getSuperfundProducts
     *
     * searches SuperfundProducts.
     *
     */
    public function testGetSuperfundProducts()
    {
    }

    /**
     * Test case for getSuperfunds
     *
     * searches Superfunds.
     *
     */
    public function testGetSuperfunds()
    {
    }

    /**
     * Test case for getTimesheet
     *
     * searches for an timesheet by unique id.
     *
     */
    public function testGetTimesheet()
    {
    }

    /**
     * Test case for getTimesheets
     *
     * searches timesheets.
     *
     */
    public function testGetTimesheets()
    {
    }

    /**
     * Test case for updateEmployee
     *
     * Update an Employee.
     *
     */
    public function testUpdateEmployee()
    {
    }

    /**
     * Test case for updateLeaveApplication
     *
     * Use this method to create a Leave Application.
     *
     */
    public function testUpdateLeaveApplication()
    {
    }

    /**
     * Test case for updatePayrun
     *
     * Update a Payrun.
     *
     */
    public function testUpdatePayrun()
    {
    }

    /**
     * Test case for updatePayslip
     *
     * Use this add, update or delete one or more payslip line items.
     *
     */
    public function testUpdatePayslip()
    {
    }

    /**
     * Test case for updatePayslipByID
     *
     * Update a Payslip.
     *
     */
    public function testUpdatePayslipByID()
    {
    }

    /**
     * Test case for updateSuperfund
     *
     * Update a Superfund.
     *
     */
    public function testUpdateSuperfund()
    {
    }

    /**
     * Test case for updateTimesheet
     *
     * Update a Timesheet.
     *
     */
    public function testUpdateTimesheet()
    {
    }
}
